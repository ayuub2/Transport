var React = require("react");
var mergeProps = require("../utils/merge-props");


var Segment = React.createClass({

  render:function() {
    
    var classSet = {};
    var props = this.props;
    var variation = this.props.variation || "";
    var style = {};

    ["disabled","loading","inverted","compact","nopadding"].forEach(function(prop) {
      if(this.props[prop]) { classSet[prop] = true; }
    }.bind(this));

    if(props.theme) {
      classSet[props.theme] = true;
    }
    if(props.ordinality) {
      classSet[props.ordinality] = true;
    }

    if(props.float) {
      variation += ` ${props.float} floated`;
      style.maxWidth = "50%";
    }

    if(props.textAlign) {
      variation += ` ${props.textAlign} aligned`;
    }

    props = mergeProps({
      className: `ui ${variation} segment`
    },{classSet,style},props);


    return (<div {...props} />);
  }
});

var BasicSegment = React.createClass({
  render:function() {

    var props = mergeProps({className:"basic",style:{margin:0}},this.props);

    return <Segment {...props}/>;

  }
});

var Padding = React.createClass({
  
  render:function() {
    var props = mergeProps({className:"padding",component:"div"},this.props);
    var component = props.component;
    delete props.component;
    return React.createElement(component,props);
  }
});

Segment.BasicSegment = BasicSegment;
Segment.Padding = Padding;
Segment.Segment = Segment;

module.exports = Segment;
