
var utils = require("../../utils");
var _ = utils;
var React = require("react");

var Select = React.createClass({

  onChange:function(e) {
    if(this.props.onChange) {

      var select = e.target;

      if(select && utils.isNumber(select.selectedIndex)) {

        var options = this.normaliseOptions();

        var value = options[select.selectedIndex - (select.options.length - options.length)].value;

        this.props.onChange(e,select.name,value);

      }

    }

  },

  normaliseOptions:function() {

    var options = this.props.options || [];

    return options.map(function(option) {

      if(_.isPlainObject(option)) {
        return option;
      }
      else if(_.isArray(option)) {
        return {
          value:option.length > 1 && option[1],
          label:option[0]
        };
      }

      return {
        value:option,
        label:option
      };

    });
  },


  render: function() {

    var props = this.props;

    var options = this.normaliseOptions();

    var content = options.map(function(option,index) {
      return <option value={option.value} key={"option_" + index}>{option.label}</option>;
    });

    if(this.props.placeholder) {
      var matchedOption = utils.find(options,function(option) {
        return option.value === props.value;
      });
      if(!matchedOption) {
        content = [<option value={this.props.placeholder} key="placeholder">{this.props.placeholder}</option>].concat(content);
      }

    }

    return (
      <select {...this.props} ref="select" onChange={this.onChange}>{content}</select>
    );
  }
});

module.exports = Select;
